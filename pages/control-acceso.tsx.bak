// pages/control-acceso.tsx
// Interfaz para Control de Acceso

import { useState, useEffect } from 'react';
import { supabase } from '../lib/supabaseClient';
import Sidebar from '../components/layout/Sidebar';
import { QrCodeIcon, CheckCircleIcon, XCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';

interface ViajeQR {
  id: string;
  numero_viaje: string;
  qr_code: string;
  estado_viaje: string;
  tipo_operacion: string;
  producto: string;
  chofer: any;
  camion: any;
  documentacion_validada: boolean;
}

export default function ControlAcceso() {
  const [user, setUser] = useState<any>(null);
  
  useEffect(() => {
    const getUser = async () => {
      const { data: { user }, error } = await supabase.auth.getUser();
      if (user && !error) {
        setUser(user);
      }
    };
    getUser();
  }, []);
  const [qrCode, setQrCode] = useState('');
  const [viaje, setViaje] = useState<ViajeQR | null>(null);
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState('');

  // Viajes demo simulados (ya que no tenemos la tabla real a√∫n)
  const viajesDemo = [
    {
      id: '1',
      numero_viaje: 'VJ-2025-001',
      qr_code: 'QR-VJ2025001',
      estado_viaje: 'confirmado',
      tipo_operacion: 'carga',
      producto: 'Soja - 35 toneladas',
      chofer: { nombre: 'Juan P√©rez', dni: '12345678' },
      camion: { patente: 'ABC123', marca: 'Mercedes-Benz' },
      documentacion_validada: true
    },
    {
      id: '2',
      numero_viaje: 'VJ-2025-002',
      qr_code: 'QR-VJ2025002',
      estado_viaje: 'carga_finalizada',
      tipo_operacion: 'carga',
      producto: 'Trigo - 42 toneladas',
      chofer: { nombre: 'Mar√≠a L√≥pez', dni: '87654321' },
      camion: { patente: 'DEF456', marca: 'Volvo' },
      documentacion_validada: true
    }
  ];

  const escanearQR = async () => {
    if (!qrCode.trim()) {
      setMessage('Por favor ingrese un c√≥digo QR');
      return;
    }

    setLoading(true);
    setMessage('');

    try {
      // Simular escaneo QR
      const viajeEncontrado = viajesDemo.find(v => v.qr_code === qrCode);
      
      if (viajeEncontrado) {
        setViaje(viajeEncontrado);
        setMessage(`‚úÖ Viaje encontrado: ${viajeEncontrado.numero_viaje}`);
      } else {
        setMessage('‚ùå C√≥digo QR no v√°lido');
        setViaje(null);
      }
    } catch (error) {
      setMessage('Error al escanear QR');
      console.error(error);
    }

    setLoading(false);
  };

  const confirmarIngreso = async () => {
    if (!viaje) return;

    setLoading(true);
    try {
      // Simular confirmaci√≥n de ingreso
      console.log('Confirmando ingreso para viaje:', viaje.id);
      setMessage(`‚úÖ Ingreso confirmado para ${viaje.numero_viaje}`);
      
      // Actualizar estado local
      setViaje({
        ...viaje,
        estado_viaje: 'ingresado_planta'
      });
    } catch (error) {
      setMessage('Error al confirmar ingreso');
    }
    setLoading(false);
  };

  const confirmarEgreso = async () => {
    if (!viaje) return;

    setLoading(true);
    try {
      // Simular confirmaci√≥n de egreso
      console.log('Confirmando egreso para viaje:', viaje.id);
      setMessage(`‚úÖ Egreso confirmado para ${viaje.numero_viaje}`);
      
      setViaje({
        ...viaje,
        estado_viaje: 'egresado_planta'
      });

      // Limpiar el formulario despu√©s de 2 segundos para permitir continuar
      setTimeout(() => {
        setViaje(null);
        setQrCode('');
        setMessage('');
      }, 2000);
    } catch (error) {
      setMessage('Error al confirmar egreso');
    }
    setLoading(false);
  };

  const crearIncidencia = () => {
    if (!viaje) return;
    
    const descripcion = prompt('Describe la incidencia:');
    if (descripcion) {
      console.log('Creando incidencia:', { viaje: viaje.id, descripcion });
      setMessage(`‚ö†Ô∏è Incidencia creada para ${viaje.numero_viaje}`);
    }
  };

  if (!user) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <p>Acceso restringido. <a href="/login" className="text-blue-600 hover:text-blue-800">Iniciar sesi√≥n</a></p>
        </div>
      </div>
    );
  }

  return (
    <div className="flex min-h-screen bg-gray-50">
      <Sidebar userEmail={user.email} />
      
      <div className="flex-1 p-6">
        {/* Header con dise√±o Nodexia */}
        <div className="mb-6">
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <div className="flex items-center space-x-3 mb-2">
              <div className="p-2 bg-orange-100 rounded-lg">
                <QrCodeIcon className="h-6 w-6 text-orange-600" />
              </div>
              <h1 className="text-2xl font-bold text-gray-900">Control de Acceso</h1>
            </div>
            <p className="text-gray-600">
              Usuario: {user.email} | Gesti√≥n de ingreso y egreso de camiones
            </p>
          </div>
        </div>

        {/* QR Scanner */}
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
          <div className="p-6 border-b border-gray-100">
            <div className="flex items-center space-x-3">
              <div className="p-2 bg-blue-100 rounded-lg">
                <QrCodeIcon className="h-5 w-5 text-blue-600" />
              </div>
              <h2 className="text-lg font-semibold text-gray-900">Escanear C√≥digo QR</h2>
            </div>
          </div>
          <div className="p-6">
          
            <div className="flex gap-4 mb-4">
              <input
                type="text"
                placeholder="Ingrese c√≥digo QR (ej: QR-VJ2025001, QR-VJ2025002)"
                value={qrCode}
                onChange={(e) => setQrCode(e.target.value)}
                className="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
              />
              <button
                onClick={escanearQR}
                disabled={loading || !qrCode.trim()}
                className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2"
              >
                <QrCodeIcon className="h-5 w-5" />
                <span>{loading ? 'Escaneando...' : 'Escanear'}</span>
              </button>
            </div>

            {message && (
              <div className={`p-4 rounded-lg flex items-center space-x-2 ${
                message.includes('‚úÖ') ? 'bg-green-50 text-green-800 border border-green-200' :
                message.includes('‚ö†Ô∏è') ? 'bg-yellow-50 text-yellow-800 border border-yellow-200' :
                'bg-red-50 text-red-800 border border-red-200'
              }`}>
                {message.includes('‚úÖ') && <CheckCircleIcon className="h-5 w-5 text-green-600" />}
                {message.includes('‚ö†Ô∏è') && <ExclamationTriangleIcon className="h-5 w-5 text-yellow-600" />}
                {!message.includes('‚úÖ') && !message.includes('‚ö†Ô∏è') && <XCircleIcon className="h-5 w-5 text-red-600" />}
                <span>{message}</span>
              </div>
            )}
          </div>
        </div>

        {/* Informaci√≥n del Viaje */}
        {viaje && (
          <div className="bg-white rounded-lg shadow p-6 mb-6">
            <h2 className="text-xl font-semibold mb-4">üöõ Informaci√≥n del Viaje</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
              <div>
                <p><strong>N√∫mero de Viaje:</strong> {viaje.numero_viaje}</p>
                <p><strong>Estado:</strong> 
                  <span className={`ml-2 px-2 py-1 rounded text-sm ${
                    viaje.estado_viaje === 'confirmado' ? 'bg-blue-100 text-blue-800' :
                    viaje.estado_viaje === 'ingresado_planta' ? 'bg-green-100 text-green-800' :
                    viaje.estado_viaje === 'carga_finalizada' ? 'bg-purple-100 text-purple-800' :
                    viaje.estado_viaje === 'egresado_planta' ? 'bg-gray-100 text-gray-800' :
                    'bg-yellow-100 text-yellow-800'
                  }`}>
                    {viaje.estado_viaje.replace('_', ' ').toUpperCase()}
                  </span>
                </p>
                <p><strong>Operaci√≥n:</strong> {viaje.tipo_operacion}</p>
                <p><strong>Producto:</strong> {viaje.producto}</p>
              </div>
              <div>
                <p><strong>Chofer:</strong> {viaje.chofer.nombre}</p>
                <p><strong>DNI:</strong> {viaje.chofer.dni}</p>
                <p><strong>Cami√≥n:</strong> {viaje.camion.patente} ({viaje.camion.marca})</p>
                <p><strong>Documentaci√≥n:</strong> 
                  <span className={`ml-2 px-2 py-1 rounded text-sm ${
                    viaje.documentacion_validada ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                  }`}>
                    {viaje.documentacion_validada ? '‚úÖ V√°lida' : '‚ùå Faltante'}
                  </span>
                </p>
              </div>
            </div>

            {/* Acciones */}
            <div className="flex gap-4">
              {viaje.estado_viaje === 'confirmado' && (
                <button
                  onClick={confirmarIngreso}
                  disabled={loading}
                  className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50"
                >
                  ‚úÖ Confirmar Ingreso
                </button>
              )}

              {viaje.estado_viaje === 'carga_finalizada' && (
                <button
                  onClick={confirmarEgreso}
                  disabled={loading}
                  className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50"
                >
                  üö™ Confirmar Egreso
                </button>
              )}

              <button
                onClick={crearIncidencia}
                className="bg-red-600 text-white px-6 py-2 rounded-lg hover:bg-red-700"
              >
                ‚ö†Ô∏è Crear Incidencia
              </button>
            </div>
          </div>
        )}

          {/* C√≥digos Demo */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h3 className="font-semibold text-blue-800 mb-2">üß™ C√≥digos Demo para Probar:</h3>
            <div className="text-sm text-blue-700">
              <p><code>QR-VJ2025001</code> - Viaje confirmado (listo para ingreso)</p>
              <p><code>QR-VJ2025002</code> - Viaje con carga finalizada (listo para egreso)</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}